name: Build and Release

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v4

    - name: Configure CMake
      run: |
        echo "System info:"
        uname -a
        echo "Processor: $(uname -m)"
        cmake -B build -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DBUILD_EXAMPLES=ON -DBUILD_TESTS=ON

    - name: Build
      run: cmake --build build --config ${{ matrix.build_type }}

    - name: Run Tests
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          cd build/${{ matrix.build_type }}
          ./test_runner.exe
          ./test_simulation_basic.exe
        else
          cd build
          ./test_runner
          ./test_simulation_basic
        fi
      shell: bash




    - name: Package Artifacts
      if: matrix.build_type == 'Release'
      run: |
        mkdir -p artifacts
        if [ "$RUNNER_OS" == "Windows" ]; then
          cp build/Release/*.exe artifacts/
          cp build/lib/Release/*.lib artifacts/
        else
          cp build/lib/*.a artifacts/ 2>/dev/null || true
          cp build/*_example artifacts/ 2>/dev/null || true
          cp build/*_simulation artifacts/ 2>/dev/null || true
          cp build/performance_comparison artifacts/ 2>/dev/null || true
          cp build/custom_boundary_conditions artifacts/ 2>/dev/null || true
        fi
        cp -r lib/include artifacts/
        cp README.md artifacts/
        cp build.sh artifacts/ 2>/dev/null || true
      shell: bash

    - name: Upload Build Artifacts
      if: matrix.build_type == 'Release'
      uses: actions/upload-artifact@v4
      with:
        name: cfd-framework-${{ matrix.os }}
        path: artifacts/

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
      actions: read

    steps:
    - uses: actions/checkout@v4

    - name: Download All Artifacts
      uses: actions/download-artifact@v4
      with:
        path: release-artifacts

    - name: Create Release Archives
      run: |
        cd release-artifacts
        for dir in */; do
          if [ -d "$dir" ]; then
            tar -czf "${dir%/}.tar.gz" -C "$dir" .
            zip -r "${dir%/}.zip" "$dir"
          fi
        done
        ls -la *.tar.gz *.zip

    - name: Setup git revision range
      id: revision
      run: |
          # Get the latest tag, or use initial commit if no tags exist
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || git rev-list --max-parents=0 HEAD)
          if [ "$latest_tag" != "$(git rev-list --max-parents=0 HEAD)" ]; then
            echo "range=${latest_tag}..HEAD" >> $GITHUB_OUTPUT
          else
            echo "range=HEAD" >> $GITHUB_OUTPUT
          fi
      
    - name: Extract Version from Tag
      id: version
      run: echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

    - name: Generate Release Notes
      run: |
        cat > release_notes.md << EOF
        # CFD Framework v${{ steps.version.outputs.version }}

        ## Features
        - 2D structured grid generation
        - Navier-Stokes equations solver (basic and optimized)
        - VTK output format for visualization
        - Cross-platform support (Windows, Linux, macOS)
        - Unity testing framework integration
        - Performance benchmarking tools

        ## Performance (Release build)
        The optimized solver shows significant improvements for larger grids:
        - 50x25 grid: +100% performance improvement
        - 400x200 grid: +48% performance improvement

        ## Build Instructions
        \`\`\`bash
        # Quick start
        ./build.sh build
        ./build.sh run

        # Performance testing
        CMAKE_BUILD_TYPE=Release ./build.sh build
        cd build/Release && ./performance_comparison
        \`\`\`

        ## What's Changed
        - See commit history for detailed changes

        ## Supported Platforms
        - ✅ Windows (MSVC)
        - ✅ Linux (GCC/Clang)
        - ✅ macOS (Clang)
        EOF

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          release-artifacts/*.tar.gz
          release-artifacts/*.zip
        body_path: release_notes.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

