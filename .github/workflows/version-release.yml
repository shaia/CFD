name: Version Release

# Triggers when VERSION file is updated on master branch
# Builds all platforms and creates a GitHub release
on:
  push:
    branches:
      - master
      - main
    paths:
      - 'VERSION'

permissions:
  contents: write

jobs:
  check-version:
    name: Validate Version Update
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      tag_exists: ${{ steps.check_tag.outputs.tag_exists }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from file
        id: get_version
        run: |
          VERSION=$(cat VERSION | tr -d '\n\r' | xargs)
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version from file: $VERSION"

          # Validate version format
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "❌ Invalid version format: $VERSION"
            echo "Version must follow semantic versioning (x.y.z)"
            exit 1
          fi

      - name: Check if tag already exists
        id: check_tag
        run: |
          VERSION="${{ steps.get_version.outputs.version }}"
          if git rev-parse "v$VERSION" >/dev/null 2>&1; then
            echo "tag_exists=true" >> $GITHUB_OUTPUT
            echo "⚠️ Tag v$VERSION already exists"
          else
            echo "tag_exists=false" >> $GITHUB_OUTPUT
            echo "✅ Tag v$VERSION does not exist, proceeding with release"
          fi

      - name: Stop if tag exists
        if: steps.check_tag.outputs.tag_exists == 'true'
        run: |
          echo "❌ Tag v${{ steps.get_version.outputs.version }} already exists!"
          echo "Cannot create duplicate release. Please update the version number."
          exit 1

  build-and-release:
    name: Build and Create Release
    needs: check-version
    uses: ./.github/workflows/build-and-release.yml
    with:
      create_release: true
      version: ${{ needs.check-version.outputs.version }}
      retention_days: 90
    secrets: inherit
    permissions:
      contents: write

  notify-success:
    name: Notify Release Success
    runs-on: ubuntu-latest
    needs: [check-version, build-and-release]
    if: success()

    steps:
      - name: Generate success summary
        run: |
          echo "# 🚀 Release v${{ needs.check-version.outputs.version }} Created Successfully!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📦 What was created:" >> $GITHUB_STEP_SUMMARY
          echo "- **GitHub Release:** [v${{ needs.check-version.outputs.version }}](https://github.com/${{ github.repository }}/releases/tag/v${{ needs.check-version.outputs.version }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Git Tag:** \`v${{ needs.check-version.outputs.version }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📥 Available Downloads:" >> $GITHUB_STEP_SUMMARY
          echo "- Windows binaries (x64, x86)" >> $GITHUB_STEP_SUMMARY
          echo "- Linux binaries (GCC, Clang)" >> $GITHUB_STEP_SUMMARY
          echo "- macOS binaries (Intel, Apple Silicon)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **Users can now download the latest binaries from the releases page!**" >> $GITHUB_STEP_SUMMARY

  notify-failure:
    name: Notify Release Failure
    runs-on: ubuntu-latest
    needs: [check-version, build-and-release]
    if: failure()

    steps:
      - name: Generate failure summary
        run: |
          echo "# ❌ Release v${{ needs.check-version.outputs.version }} Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The release creation process failed. Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Possible issues:" >> $GITHUB_STEP_SUMMARY
          echo "- Build failures on one or more platforms" >> $GITHUB_STEP_SUMMARY
          echo "- Test failures" >> $GITHUB_STEP_SUMMARY
          echo "- Release creation permissions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "💡 **Next steps:** Fix the issues and push another commit to retry the release." >> $GITHUB_STEP_SUMMARY